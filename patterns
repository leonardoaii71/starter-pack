import spacy
from rasa_core.actions import Action
from spacy.matcher import Matcher

nlp = spacy.load('es_core_news_md')
matcher = Matcher(nlp.vocab)
#para preguntas de calendario
pattern =  [{'POS': 'ADV'}, {'POS': 'VBZ'},  {'POS': 'ART'},  {'POS': 'NN'}, {'IS_PUNCT': True}]
pattern1 = [ {'IS_PUNCT': True}, {'POS': 'ADV'}, {'POS': 'VBZ'}, {'POS': 'NN'}, {'IS_PUNCT': True}]
pattern2 = [ {'IS_PUNCT': True}, {'POS': 'ADV'}, {'POS': 'NN'}, {'POS': 'VBZ'}, {'POS': 'ART'}, {'IS_PUNCT': True}]
pattern3 = [{'POS': 'ADV'}, {'POS': 'NN'}, {'POS': 'VBZ'}, {'POS': 'ART'}, {'IS_PUNCT': True}]
pattern4 = [  {'IS_PUNCT': True}, {'POS': 'ADV'}, {'POS': 'NN'}, {'POS': 'VBZ'}, {'POS': 'ART'}, {'IS_PUNCT': True}]
pattern5 = [  {'IS_PUNCT': True}, {'POS': 'PRP'}, {'POS': 'ADV'}, {'POS': 'NN'}, {'POS': 'ART'}, {'IS_PUNCT': True}]
pattern6 = [ {'POS': 'PRP'}, {'POS': 'ADV'}, {'POS': 'NN'}, {'POS': 'ART'}, {'IS_PUNCT': True}]
#pattern = [{'LOWER': 'cuando'}, {'LEMMA': 'ser'},]

matcher.add('query_event', on_match, pattern)
matcher.add('query_event', on_match, pattern1)
matcher.add('query_event', on_match, pattern2)
matcher.add('query_event', on_match, pattern3)
matcher.add('query_event', on_match, pattern4)
matcher.add('query_event', on_match, pattern5)
matcher.add('query_event', on_match, pattern6)

doc = nlp('/nlu_data.md')
matches = matcher(doc)
for match_id, start, end in matches:
    string_id = nlp.vocab.strings[match_id]  # get string representation
    span = doc[start:end]  # the matched span

nlp.to_disk('/models/current/nlu')
